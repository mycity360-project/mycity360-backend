# Generated by Django 4.1.5 on 2023-07-03 18:43

import backend.models.banner
import backend.models.category
import backend.models.image
import backend.models.service
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_mysql.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "password",
                    models.CharField(max_length=128, verbose_name="password"),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "created_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Created At"
                    ),
                ),
                (
                    "updated_date",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Updated At"
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False, verbose_name="Is deleted instance"
                    ),
                ),
                (
                    "extra_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        null=True,
                        verbose_name="Extra Data",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        help_text="Required. 128 characters or fewer.Letters, digits and @/./+/-/_ only.",
                        max_length=128,
                        unique=True,
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=128, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=128, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        db_index=True,
                        max_length=254,
                        verbose_name="email address",
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=17,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.",
                                regex="^\\+?1?\\d{9,15}$",
                            )
                        ],
                        verbose_name="phone number",
                    ),
                ),
                (
                    "country_code",
                    models.CharField(
                        blank=True,
                        max_length=16,
                        null=True,
                        verbose_name="Country Code",
                    ),
                ),
                (
                    "profile_image",
                    models.URLField(
                        blank=True, null=True, verbose_name="Image"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Un select this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="date joined"
                    ),
                ),
                (
                    "is_phone_verified",
                    models.BooleanField(
                        default=False, verbose_name="Is Phone Verified"
                    ),
                ),
                (
                    "is_email_verified",
                    models.BooleanField(
                        default=False, verbose_name="Is Email Verified"
                    ),
                ),
                (
                    "is_gmail_login",
                    models.BooleanField(
                        default=False, verbose_name="Is Gmail Login"
                    ),
                ),
                (
                    "password_updated_on",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Password Updated On",
                    ),
                ),
                (
                    "failed_login_attempts",
                    models.PositiveSmallIntegerField(
                        default=0,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(10),
                        ],
                        verbose_name="No of Failed Login Attempts",
                    ),
                ),
                (
                    "failed_login_time",
                    models.DateTimeField(
                        blank=True,
                        null=True,
                        verbose_name="Last failed login attempt time",
                    ),
                ),
                (
                    "current_address",
                    models.TextField(
                        blank=True, verbose_name="current address"
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        blank=True,
                        choices=[("Admin", "Admin"), ("User", "User")],
                        max_length=128,
                        verbose_name="role",
                    ),
                ),
                (
                    "email_otp",
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(111111),
                            django.core.validators.MaxValueValidator(999999),
                        ],
                        verbose_name="Email OTP",
                    ),
                ),
                (
                    "phone_otp",
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(111111),
                            django.core.validators.MaxValueValidator(999999),
                        ],
                        verbose_name="Phone OTP",
                    ),
                ),
                (
                    "email_expiry",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Email Expiry"
                    ),
                ),
                (
                    "phone_expiry",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Phone Expiry"
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
            },
        ),
        migrations.CreateModel(
            name="Area",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Created At"
                    ),
                ),
                (
                    "updated_date",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Updated At"
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False, verbose_name="Is deleted instance"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, verbose_name="Is active instance"
                    ),
                ),
                (
                    "extra_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        null=True,
                        verbose_name="Extra Data",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=128, unique=True, verbose_name="Name"
                    ),
                ),
                (
                    "pincode",
                    models.CharField(max_length=128, verbose_name="Pincode"),
                ),
            ],
            options={
                "verbose_name": "Area",
                "verbose_name_plural": "Area",
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Created At"
                    ),
                ),
                (
                    "updated_date",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Updated At"
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False, verbose_name="Is deleted instance"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, verbose_name="Is active instance"
                    ),
                ),
                (
                    "extra_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        null=True,
                        verbose_name="Extra Data",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=128, unique=True, verbose_name="Name"
                    ),
                ),
                (
                    "icon",
                    models.URLField(
                        blank=True, null=True, verbose_name="Image URL"
                    ),
                ),
                (
                    "icon_data",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=backend.models.category.upload_to,
                        verbose_name="Image",
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        max_length=17,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.",
                                regex="^\\+?1?\\d{9,15}$",
                            )
                        ],
                        verbose_name="Phone Number",
                    ),
                ),
                (
                    "sequence",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Sequence"
                    ),
                ),
                (
                    "is_price",
                    models.BooleanField(
                        default=True, verbose_name="Is Price Required"
                    ),
                ),
                (
                    "price_limit",
                    models.FloatField(default=0, verbose_name="Price Limit"),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="parent_category",
                        to="backend.category",
                        verbose_name="Category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Category",
                "verbose_name_plural": "Category",
            },
        ),
        migrations.CreateModel(
            name="Image",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Created At"
                    ),
                ),
                (
                    "updated_date",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Updated At"
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False, verbose_name="Is deleted instance"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, verbose_name="Is active instance"
                    ),
                ),
                (
                    "extra_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        null=True,
                        verbose_name="Extra Data",
                    ),
                ),
                (
                    "image",
                    models.URLField(
                        blank=True, null=True, verbose_name="Image URL"
                    ),
                ),
                (
                    "image_new",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=backend.models.image.upload_to,
                        verbose_name="Image",
                    ),
                ),
            ],
            options={
                "verbose_name": "Image",
                "verbose_name_plural": "Images",
            },
        ),
        migrations.CreateModel(
            name="State",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Created At"
                    ),
                ),
                (
                    "updated_date",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Updated At"
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False, verbose_name="Is deleted instance"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, verbose_name="Is active instance"
                    ),
                ),
                (
                    "extra_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        null=True,
                        verbose_name="Extra Data",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=128, unique=True, verbose_name="Name"
                    ),
                ),
            ],
            options={
                "verbose_name": "State",
                "verbose_name_plural": "States",
            },
        ),
        migrations.CreateModel(
            name="SystemConfig",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Created At"
                    ),
                ),
                (
                    "updated_date",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Updated At"
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False, verbose_name="Is deleted instance"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, verbose_name="Is active instance"
                    ),
                ),
                (
                    "extra_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        null=True,
                        verbose_name="Extra Data",
                    ),
                ),
                (
                    "key",
                    models.CharField(
                        max_length=128, unique=True, verbose_name="Name"
                    ),
                ),
                (
                    "value",
                    models.CharField(max_length=128, verbose_name="Value"),
                ),
            ],
            options={
                "verbose_name": "System Config",
                "verbose_name_plural": "System Configs",
            },
        ),
        migrations.CreateModel(
            name="UserAd",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Created At"
                    ),
                ),
                (
                    "updated_date",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Updated At"
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False, verbose_name="Is deleted instance"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, verbose_name="Is active instance"
                    ),
                ),
                (
                    "extra_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        null=True,
                        verbose_name="Extra Data",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=128, verbose_name="Name"),
                ),
                (
                    "description",
                    models.CharField(
                        max_length=128, verbose_name="Description"
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        max_length=128, unique=True, verbose_name="Code"
                    ),
                ),
                (
                    "tags",
                    django_mysql.models.ListCharField(
                        models.CharField(max_length=10),
                        blank=True,
                        max_length=256,
                        null=True,
                        size=None,
                    ),
                ),
                (
                    "is_featured",
                    models.BooleanField(
                        default=False, verbose_name="Is Featured"
                    ),
                ),
                ("price", models.FloatField(default=0, verbose_name="Price")),
                (
                    "area",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="ad_area",
                        to="backend.area",
                        verbose_name="Area",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="ad_category",
                        to="backend.category",
                        verbose_name="Category",
                    ),
                ),
                (
                    "images",
                    models.ManyToManyField(
                        blank=True,
                        null=True,
                        to="backend.image",
                        verbose_name="Images",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ad_user",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "UserAd",
                "verbose_name_plural": "UserAds",
            },
        ),
        migrations.CreateModel(
            name="Service",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Created At"
                    ),
                ),
                (
                    "updated_date",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Updated At"
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False, verbose_name="Is deleted instance"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, verbose_name="Is active instance"
                    ),
                ),
                (
                    "extra_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        null=True,
                        verbose_name="Extra Data",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=128, verbose_name="Name"),
                ),
                ("description", models.TextField(verbose_name="Description")),
                (
                    "code",
                    models.CharField(
                        max_length=128, unique=True, verbose_name="Code"
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        max_length=17,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.",
                                regex="^\\+?1?\\d{9,15}$",
                            )
                        ],
                        verbose_name="Phone Number",
                    ),
                ),
                (
                    "icon",
                    models.URLField(
                        blank=True, null=True, verbose_name="Image URL"
                    ),
                ),
                (
                    "icon_data",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=backend.models.service.upload_to,
                        verbose_name="Image",
                    ),
                ),
                (
                    "sequence",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Sequence"
                    ),
                ),
                (
                    "images",
                    models.ManyToManyField(
                        blank=True,
                        null=True,
                        to="backend.image",
                        verbose_name="Images",
                    ),
                ),
            ],
            options={
                "verbose_name": "Service",
                "verbose_name_plural": "Services",
            },
        ),
        migrations.CreateModel(
            name="SavedAd",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Created At"
                    ),
                ),
                (
                    "updated_date",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Updated At"
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False, verbose_name="Is deleted instance"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, verbose_name="Is active instance"
                    ),
                ),
                (
                    "extra_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        null=True,
                        verbose_name="Extra Data",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="saved_ad_user",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
                (
                    "user_ad",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="saved_ad",
                        to="backend.userad",
                        verbose_name="UserAd",
                    ),
                ),
            ],
            options={
                "verbose_name": "SavedAd",
                "verbose_name_plural": "SavedAds",
            },
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Created At"
                    ),
                ),
                (
                    "updated_date",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Updated At"
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False, verbose_name="Is deleted instance"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, verbose_name="Is active instance"
                    ),
                ),
                (
                    "extra_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        null=True,
                        verbose_name="Extra Data",
                    ),
                ),
                ("question", models.TextField(verbose_name="Question")),
                (
                    "sequence",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Sequence"
                    ),
                ),
                (
                    "field_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Text", "Text"),
                            ("Number", "Number"),
                            ("Dropdown", "Dropdown"),
                            ("Toggle", "Toggle"),
                        ],
                        default="Text",
                        max_length=128,
                        null=True,
                        verbose_name="Field Type",
                    ),
                ),
                (
                    "label",
                    models.CharField(
                        blank=True,
                        max_length=128,
                        null=True,
                        verbose_name="Label",
                    ),
                ),
                (
                    "placeholder",
                    models.CharField(
                        blank=True,
                        max_length=128,
                        null=True,
                        verbose_name="Placeholder",
                    ),
                ),
                (
                    "is_required",
                    models.BooleanField(
                        default=False, verbose_name="Is Required"
                    ),
                ),
                (
                    "answer_limit",
                    models.PositiveIntegerField(
                        default=128, verbose_name="Answer character limit"
                    ),
                ),
                (
                    "values",
                    django_mysql.models.ListCharField(
                        models.CharField(max_length=128),
                        blank=True,
                        max_length=256,
                        null=True,
                        size=None,
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="question_category",
                        to="backend.category",
                        verbose_name="Category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Question",
                "verbose_name_plural": "Questions",
            },
        ),
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Created At"
                    ),
                ),
                (
                    "updated_date",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Updated At"
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False, verbose_name="Is deleted instance"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, verbose_name="Is active instance"
                    ),
                ),
                (
                    "extra_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        null=True,
                        verbose_name="Extra Data",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=128, unique=True, verbose_name="Name"
                    ),
                ),
                (
                    "state",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="location_state",
                        to="backend.state",
                        verbose_name="State",
                    ),
                ),
            ],
            options={
                "verbose_name": "Location",
                "verbose_name_plural": "Locations",
            },
        ),
        migrations.CreateModel(
            name="Banner",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Created At"
                    ),
                ),
                (
                    "updated_date",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Updated At"
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False, verbose_name="Is deleted instance"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, verbose_name="Is active instance"
                    ),
                ),
                (
                    "extra_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        null=True,
                        verbose_name="Extra Data",
                    ),
                ),
                ("redirect_url", models.URLField(verbose_name="Redirect URL")),
                (
                    "image",
                    models.URLField(
                        blank=True, null=True, verbose_name="Image URL"
                    ),
                ),
                (
                    "image_data",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=backend.models.banner.upload_to,
                        verbose_name="Image",
                    ),
                ),
                (
                    "sequence",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Sequence"
                    ),
                ),
                (
                    "area",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="banner_area",
                        to="backend.area",
                        verbose_name="Area",
                    ),
                ),
            ],
            options={
                "verbose_name": "Banner",
                "verbose_name_plural": "Banners",
            },
        ),
        migrations.AddField(
            model_name="area",
            name="location",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="area_location",
                to="backend.location",
                verbose_name="Location",
            ),
        ),
        migrations.CreateModel(
            name="Answer",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Created At"
                    ),
                ),
                (
                    "updated_date",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Updated At"
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False, verbose_name="Is deleted instance"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, verbose_name="Is active instance"
                    ),
                ),
                (
                    "extra_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        null=True,
                        verbose_name="Extra Data",
                    ),
                ),
                ("answer", models.TextField(verbose_name="Answer")),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="answer_question",
                        to="backend.question",
                        verbose_name="Question",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="answer_user",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
                (
                    "user_ad",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="answer_ad",
                        to="backend.userad",
                        verbose_name="UserAd",
                    ),
                ),
            ],
            options={
                "verbose_name": "Answer",
                "verbose_name_plural": "Answers",
            },
        ),
        migrations.AddField(
            model_name="user",
            name="area",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="user_area",
                to="backend.area",
                verbose_name="Area",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="groups",
            field=models.ManyToManyField(
                blank=True,
                help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                related_name="user_set",
                related_query_name="user",
                to="auth.group",
                verbose_name="groups",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
    ]
